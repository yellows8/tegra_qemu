/*
 * ARM NVIDIA Tegra2 emulation.
 *
 * Copyright (c) 2014-2015 Dmitry Osipenko <digetx@gmail.com>
 * Copyright (c) yellows8
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as published by the
 *  Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 *  for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, see <http://www.gnu.org/licenses/>.
 */

/* Autogenerated from TRM v02p */

// Based on timer.h.

#ifndef TEGRA_TIMER_SHARED_H
#define TEGRA_TIMER_SHARED_H

#define SHARED_INTR_STATUS_OFFSET 0x0
#define SHARED_INTR_STATUS_RESET  0x00000000
typedef union shared_intr_status_u {
    struct {
        unsigned int watchdog_src_bitmap:5;
        unsigned int undefined_bit_5:1;
        unsigned int timer_src_bitmap:5;
    };

    uint32_t reg32;
} shared_intr_status_t;

#define SHARED_TIMER_SECURE_CFG_OFFSET 0x4
#define SHARED_TIMER_SECURE_CFG_RESET  0x00000000
typedef union shared_timer_secure_cfg_u {
    uint32_t reg32;
} shared_timer_secure_cfg_t;

#define DEFINE_REG32(reg) reg##_t reg

typedef struct tegra_timer_common_state {
    SysBusDevice parent_obj;

    MemoryRegion iomem;
    DEFINE_REG32(shared_timer_secure_cfg);
} tegra_timer_shared;

#endif // TEGRA_TIMER_SHARED_H
